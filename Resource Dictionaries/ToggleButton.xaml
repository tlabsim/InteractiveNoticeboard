<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework"
    mc:Ignorable="d">

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>

    <Style x:Key="SlidingToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ToggleOn">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="SlidingBorder">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="30,0,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="70,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ToggleOff">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="SlidingBorder">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="140" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26"></RowDefinition>
                        </Grid.RowDefinitions>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Grid Grid.Column="1" Width="Auto" Background="{x:Null}">
                            <Border BorderBrush="#FFA6A6A6" BorderThickness="1" CornerRadius="13" Background="#FFF6F6F6">
                            </Border>
                            <TextBlock TextWrapping="Wrap" FontFamily="Segoe UI" FontSize="13" Text="Disabled" Foreground="Red" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,10,0"/>
                            <TextBlock TextWrapping="Wrap" FontFamily="Segoe UI" FontSize="13" Text="Enabled" Foreground="Green"  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                            <Border x:Name="SlidingBorder" BorderBrush="#FF666666" BorderThickness="1" Width="70" HorizontalAlignment="Left" CornerRadius="13">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="White" Offset="0" />
                                                    <GradientStop Color="#FFCBCBCB" Offset="1" />
                                                    <GradientStop Color="#FFE5E5E5" Offset="0.5" />
                                                    <GradientStop Color="#FED8D8D8" Offset="0.501" />
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="Border.IsMouseOver" Value="True">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFD1D1D1" Offset="0" />
                                                            <GradientStop Color="#FFA0A0A0" Offset="1" />
                                                            <GradientStop Color="#FFBABABA" Offset="0.501" />
                                                            <GradientStop Color="#FEC4C4C4" Offset="0.5" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Border CornerRadius="13">
                                    <Border.Background>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#86FFFFFF" Offset="0" />
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>

                        </Grid>
                        <Border x:Name="DisabledBorder" BorderBrush="{x:Null}" BorderThickness="1" Grid.ColumnSpan="2" CornerRadius="1" Background="White" Opacity="0" IsHitTestVisible="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="ToggleOff_BeginStoryboard" Storyboard="{StaticResource ToggleOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ToggleOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF2F63FF"/>
    </Style>

    <Style x:Key="EnableDisableToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ToggleOn">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Slider">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="30,0,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="80,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Slider">
                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF237EAF"></EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>                            
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledText">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EnabledText">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                           
                        </Storyboard>
                        <Storyboard x:Key="ToggleOff">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Slider">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.05" Value="30,0,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="-10,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Slider">
                                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF464646"></EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>                           
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledText">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EnabledText">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="#FF232323" Width="170" ClipToBounds="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                        </Grid.RowDefinitions>

                        <ContentPresenter Grid.ColumnSpan="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>

                        <Path Name="Slider" Grid.ColumnSpan="2" Data="M0,0 90,0 100,30 10,30Z" Margin="-10,0,0,0" Fill="#FF464646" Width="100" Height="30" HorizontalAlignment="Left" VerticalAlignment="Center"></Path>
                        <TextBlock Name="DisabledText" TextWrapping="Wrap" FontFamily="Segoe UI" FontSize="13" FontWeight="Bold" Text="DISABLED" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <TextBlock Name="EnabledText" Grid.Column="1" TextWrapping="Wrap" FontFamily="Segoe UI" FontSize="13" FontWeight="Bold" Text="ENABLED" Foreground="White" Opacity="0"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="ToggleOff_BeginStoryboard" Storyboard="{StaticResource ToggleOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ToggleOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>        
    </Style>

    <Style x:Key="OnOffToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ToggleOn">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Slider">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="15,0,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="45,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Slider">
                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF237EAF"></EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledText">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EnabledText">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="ToggleOff">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Slider">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.05" Value="20,0,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="-10,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Slider">
                                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF464646"></EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledText">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EnabledText">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="#FF232323" Width="100" ClipToBounds="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"></RowDefinition>
                        </Grid.RowDefinitions>

                        <ContentPresenter Grid.ColumnSpan="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>

                        <Path Name="Slider" Grid.ColumnSpan="2" Data="M0,0 55,0 65,25 10,25Z" Margin="-10,0,0,0" Fill="#FF464646" Width="65" Height="25" HorizontalAlignment="Left" VerticalAlignment="Center"></Path>
                        <TextBlock Name="DisabledText" TextWrapping="Wrap" FontFamily="Segoe UI" FontSize="13" FontWeight="Bold" Text="OFF" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <TextBlock Name="EnabledText" Grid.Column="1" TextWrapping="Wrap" FontFamily="Segoe UI" FontSize="13" FontWeight="Bold" Text="ON" Foreground="White" Opacity="0"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="ToggleOff_BeginStoryboard" Storyboard="{StaticResource ToggleOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ToggleOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>   
</ResourceDictionary>